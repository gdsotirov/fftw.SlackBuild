#!/bin/sh
#
# Slackware build script for FFTW
# Copyright (C) 2007-2009,2011,2014 Georgi D. Sotirov <gdsotirov@dir.bg>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
#
# This script is for building both portable package (ARCH=i486) and SIMD
# optimized package (ARCH=i686).
# For the portable package all precisions are availiable (single, double,
# long double), while for the optimized package only double precision
# is possible.
#
# Visit SlackPack at http://sotirov-bg.net/slackpack/
#
# $Id: fftw.SlackBuild,v 1.6.2.1 2014/03/09 14:54:13 gsotirov Exp $
#

. ../../slack-package.conf

NAME=fftw
VERSION=3.2.2
BUILD=${BUILD:-1}
ARCH=${ARCH:-i486}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/$NAME-$VERSION
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-$NAME
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

if [ "$ARCH" = "i686" ]; then
  PORTABILITY="--enable-sse2 --enable-fma"
  PRECISION='double'
else
  PORTABILITY=""
  PRECISION='all'
fi

# Extract the source
cd $TMP
tar -xvf $CWD/$NAME-$VERSION.tar.gz || exit 3
SRC=$TMP/$NAME-$VERSION
cd $SRC
fix_source

# Configure, build and install single precision library libfftw3f
if [ "$PRECISION" = "all" ]; then
  CFLAGS=$SLKCFLAGS \
  CXXFLAGS=$SLKCFLAGS \
  ./configure --build=$ARCH-slackware-linux \
              --host=$ARCH-slackware-linux \
              --prefix=/usr \
              --sysconfdir=/etc \
              --libdir=/usr/lib${LIBDIRSUFFIX} \
              --mandir=/usr/man \
              --infodir=/usr/info \
              --enable-shared=yes \
              --enable-static=no \
              --enable-single \
              $PORTABILITY \
              --enable-threads || exit 4

  make -j4 all || exit 5 
  make DESTDIR=$PKG install || exit 6
fi

# Configure, build and install double precision library libfftw3
if [ "$PRECISION" = "all" -o "$PRECISION" = "double" ]; then
  CFLAGS=$SLKCFLAGS \
  CXXFLAGS=$SLKCFLAGS \
  ./configure --build=$ARCH-slackware-linux \
              --host=$ARCH-slackware-linux \
              --prefix=/usr \
              --sysconfdir=/etc \
              --libdir=/usr/lib${LIBDIRSUFFIX} \
              --mandir=/usr/man \
              --infodir=/usr/info \
              --enable-shared=yes \
              --enable-static=no \
              $PORTABILITY \
              --enable-threads || exit 4

  make -j4 all || exit 5 
  make DESTDIR=$PKG install || exit 6
fi

# Configure, build and install double precision library libfftw3
if [ "$PRECISION" = "all" ]; then
  CFLAGS=$SLKCFLAGS \
  CXXFLAGS=$SLKCFLAGS \
  ./configure --build=$ARCH-slackware-linux \
              --host=$ARCH-slackware-linux \
              --prefix=/usr \
              --sysconfdir=/etc \
              --libdir=/usr/lib${LIBDIRSUFFIX} \
              --mandir=/usr/man \
              --infodir=/usr/info \
              --enable-shared=yes \
              --enable-static=no \
	      --enable-long-double \
              $PORTABILITY \
              --enable-threads || exit 4

  make -j4 all || exit 5 
  make DESTDIR=$PKG install || exit 6
fi

# Prepare the package
bin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
DOCFILES="$DOCFILES CONVENTIONS"
( cd $SRC; create_docs $PKG $NAME-$VERSION )
gzip_man $PKG
rm -f $PKG/usr/info/dir
gzip_info $PKG

mkdir -p $PKG/install
install -m 644 $CWD/doinst.sh      $PKG/install/doinst.sh
install -m 644 $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 $CWD/slack-required $PKG/install/slack-required

mkdir -p $PKG/usr/src/slackbuilds/$NAME-$VERSION
install -m 644 $CWD/doinst.sh        $PKG/usr/src/slackbuilds/$NAME-$VERSION/doinst.sh
install -m 644 $CWD/slack-desc       $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-desc
install -m 644 $CWD/slack-required   $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-required
install -m 644 $CWD/$NAME.SlackBuild $PKG/usr/src/slackbuilds/$NAME-$VERSION/$NAME.SlackBuild

# Pack
cd $PKG
PKGNAME=$NAME-$VERSION-$ARCH-$BUILD$MYIN
makepkg -l y -c n -p $PKG_DIR/$PKGNAME.txz
cd $PKG_DIR
md5sum $PKGNAME.txz > $PKGNAME.txz.md5
cat $PKG/install/slack-desc > $PKG_DIR/$PKGNAME.txt

# Clean up (optionally)
if [ "$1" == "--cleanup" ]; then
  rm -rf $SRC
  rm -rf $PKG
fi

